/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Game.ts":
/*!*********************!*\
  !*** ./src/Game.ts ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Game; });\n/* harmony import */ var _Piece__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Piece */ \"./src/Piece.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n/* harmony import */ var _Grab__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Grab */ \"./src/Grab.ts\");\n/* harmony import */ var _Timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Timer */ \"./src/Timer.ts\");\n\r\n\r\n\r\n\r\n/** 퍼즐에서 아무 퍼즐 조각이나 선택하여, 그 조각의 행렬 위치를 얻는다. */\r\nfunction selectRealPiece(model, blankTag) {\r\n    while (true) {\r\n        let i = Math.floor(Math.random() * model.length);\r\n        if (model[i] != blankTag)\r\n            return i;\r\n    }\r\n}\r\n/** 퍼즐의 해결 가능 여부를 실제로 판단한다. */\r\nfunction checkSolvable(model, blankTag) {\r\n    let blankIndex = model.indexOf(blankTag);\r\n    let size = Math.sqrt(model.length);\r\n    let blankRow = Math.floor(blankIndex / size);\r\n    let inversion = 0;\r\n    for (let i = 0; i < model.length; i++) {\r\n        if (model[i] == blankTag)\r\n            continue;\r\n        for (let j = i + 1; j < model.length; j++) {\r\n            if (model[j] == blankTag)\r\n                continue;\r\n            if (model[i] > model[j])\r\n                inversion++;\r\n        }\r\n    }\r\n    // return inversion % 2 == parity;\r\n    return (inversion + ((size % 2 == 0) ? blankRow + 1 : 0)) % 2 == 0;\r\n}\r\nclass Game {\r\n    constructor(size, puzzleSet, left, top, len, timerHeight) {\r\n        /**\r\n         * 게임 진행 중 여부\r\n         *\r\n         * false : 아직 시작 버튼을 누르지 않은 상태.\r\n         *  - 플레이어는 퍼즐 조각을 요리조리 움직여볼 수 있다.\r\n         *  - 타이머가 진행되지 않는다.\r\n         *  - 우연찮게 퍼즐을 완성시켜도 인정하지 않는다.\r\n         *\r\n         * true : 플레이 중\r\n         *  - 타이머가 진행된다.\r\n         *  - 퍼즐을 완성시키면 클리어한 것으로 인정되고, 완성 이펙트가 뜨고, 이 값이 false로 돌아간다.\r\n         */\r\n        this.playing = false;\r\n        /** 이 게임에서 빈 칸에 해당하는 태그 */\r\n        this.blankTag = 0;\r\n        /** 이 게임에서 번호를 표시할지 여부 */\r\n        this.showLabel = false;\r\n        this._bottomBlank = true;\r\n        this._rightBlank = false;\r\n        this._upsideDown = false;\r\n        /** 퍼즐 조각의 움직임을 컨트롤하는 컴포넌트 */\r\n        this.grab = new _Grab__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        this.handlePlay = this._noop;\r\n        /**\r\n         * 퍼즐을 완성했을 때 실행시킬 외부 콜백 목록\r\n         * 왜 콜백을 외부에서 받는지는 모르겠지만, 아무튼 쓰고싶은 함수가 외부에 있다고!!\r\n         * */\r\n        this.completeHandlers = [];\r\n        this.left = left;\r\n        this.top = top;\r\n        this.len = len;\r\n        this.timer = new _Timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n        this.timer.y = top * 2 + len + timerHeight / 2;\r\n        this.timer.fontSize = timerHeight * 5 / 12;\r\n        this.timer.left = left;\r\n        this.timer.width = len;\r\n        this.viewWidth = left * 2 + len;\r\n        this.viewHeight = top * 2 + len + timerHeight;\r\n        this._size = size;\r\n        this.setPuzzleSet(puzzleSet);\r\n    }\r\n    /** 캔버스에서 퍼즐의 오른쪽 끝 위치 */\r\n    get right() { return this.left + this.len; }\r\n    /** 캔버스에서 퍼즐의 아래쪽 끝 위치 */\r\n    get bottom() { return this.top + this.len; }\r\n    /** 한 행 또는 열의 퍼즐 조각의 수 */\r\n    get size() { return this._size; }\r\n    /** 퍼즐 조각 하나의 변의 길이 */\r\n    get pieceSize() { return this.len / this._size; }\r\n    /** 현재 빈 칸의 행렬 위치 */\r\n    get rowColOfBlank() {\r\n        let i = this.puzzleModel.indexOf(this.blankTag);\r\n        return [Math.floor(i / this._size), i % this._size];\r\n    }\r\n    /**\r\n     * 생성된 퍼즐 조각에 번호를 처음으로 또는 다시 붙인다.\r\n     * 번호를 붙이는 것은 게임 초기화를 요구하지 않는다.\r\n     * */\r\n    assignLabel(upsideDown) {\r\n        this._upsideDown = upsideDown;\r\n        const totalPieces = this._size * this._size;\r\n        for (let tag = 0; tag < totalPieces; tag++) {\r\n            let vrow = Math.floor(tag / this._size);\r\n            let vcol = tag % this._size;\r\n            let lrow = upsideDown ? this._size - vrow - 1 : vrow;\r\n            let label = lrow * this._size + vcol + 1;\r\n            this.pieces[tag].label = label.toString();\r\n        }\r\n    }\r\n    /** 퍼즐 크기를 설정한다. 게임 재설정이 요구된다. */\r\n    setSize(size, bottomBlank, rightBlank) {\r\n        this.end(null);\r\n        this.timer.reset();\r\n        this._size = size;\r\n        this._bottomBlank = bottomBlank;\r\n        this._rightBlank = rightBlank;\r\n        const t = size * size;\r\n        this.puzzleModel = new Array(t);\r\n        this.pieces = new Array(t);\r\n        const pieceLength = this._puzzleSet.size / size;\r\n        for (let tag = 0; tag < t; tag++) {\r\n            this.puzzleModel[tag] = tag;\r\n            let row = Math.floor(tag / size);\r\n            let col = tag % size;\r\n            let [x, y] = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPosition\"])(row, col, this._puzzleSet.size, this._puzzleSet.left, this._puzzleSet.top, size);\r\n            this.pieces[tag] = new _Piece__WEBPACK_IMPORTED_MODULE_0__[\"default\"](tag, this._puzzleSet.texture, x, y, pieceLength, this.len / size);\r\n        }\r\n        this.blankTag = (this._size * (this._size - 1)) * Number(bottomBlank) + (this._size - 1) * Number(rightBlank);\r\n        this.assignLabel(this._upsideDown);\r\n        this.initPiecePosition();\r\n    }\r\n    /** 퍼즐셋을 변경한다. 참조 범위가 바뀔 수 있으므로 setSize가 후속적으로 실행된다. */\r\n    setPuzzleSet(puzzleSet) {\r\n        this._puzzleSet = puzzleSet;\r\n        this.solvable = puzzleSet.solvable;\r\n        this.setSize(this._size, this._bottomBlank, this._rightBlank);\r\n    }\r\n    /** 퍼즐을 섞는다. Game 내에 있는 solvable 속성이 적용된다. */\r\n    shuffle() {\r\n        this.puzzleModel.sort(() => 0.5 - Math.random());\r\n        if (checkSolvable(this.puzzleModel, this.blankTag) != this.solvable) {\r\n            let a = selectRealPiece(this.puzzleModel, this.blankTag);\r\n            let b;\r\n            do {\r\n                b = selectRealPiece(this.puzzleModel, this.blankTag);\r\n            } while (a == b);\r\n            let t = this.puzzleModel[a];\r\n            this.puzzleModel[a] = this.puzzleModel[b];\r\n            this.puzzleModel[b] = t;\r\n        }\r\n    }\r\n    /**\r\n     * 퍼즐 조각들을 모두 제자리에 놓는다.\r\n     * (퍼즐 조각의 위치를 퍼즐 모델과 일치시킨다.)\r\n     * */\r\n    initPiecePosition() {\r\n        const totalPieces = this._size * this._size;\r\n        const num = this._size;\r\n        const len = this.len;\r\n        for (let i = 0; i < totalPieces; i++) {\r\n            const tag = this.puzzleModel[i];\r\n            let row = Math.floor(i / num);\r\n            let col = (i % num);\r\n            let piece = this.pieces[tag];\r\n            piece.destX = this.left + col * len / num;\r\n            piece.destY = this.top + row * len / num;\r\n            piece.getIntoPositionNow();\r\n        }\r\n    }\r\n    /** (x, y) 좌표의 행렬 위치를 얻는다. */\r\n    getRowColAt(x, y) {\r\n        return Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getRowCol\"])(x, y, this.len, this.left, this.top, this._size);\r\n    }\r\n    /** 지정 행렬 위치에 있는 퍼즐 조각을 얻는다. */\r\n    getPieceAt(row, col) {\r\n        let foundPosition = col + row * this._size;\r\n        let foundTag = this.puzzleModel[foundPosition];\r\n        return this.pieces[foundTag];\r\n    }\r\n    /** index번째 행벡터/열벡터를 얻는다. */\r\n    getVector(index, orient) {\r\n        let ar = new Array(this._size);\r\n        let start, increment;\r\n        switch (orient) {\r\n            case \"row\":\r\n                start = index * this._size;\r\n                increment = 1;\r\n                break;\r\n            case \"col\":\r\n                start = index;\r\n                increment = this._size;\r\n                break;\r\n        }\r\n        for (let i = 0; i < this._size; i++) {\r\n            ar[i] = this.pieces[this.puzzleModel[start + increment * i]];\r\n        }\r\n        return ar;\r\n    }\r\n    /** rAF에 동기화된 마우스 클릭 핸들러 */\r\n    dispatchMousedown(m) {\r\n        this.grab.onMousedown(m, this);\r\n        // 아직 제 자리를 못 찾고 헤매는 조각이 있으면 곧바로 destX,destY 값을 적용시켜 즉시 이동한다.\r\n        for (const piece of this.pieces) {\r\n            if (piece.tag != this.blankTag)\r\n                piece.getIntoPositionNow();\r\n        }\r\n    }\r\n    /** rAF에 동기화된 마우스 놓기 핸들러 */\r\n    dispatchMouseup(m) {\r\n        this.grab.onMouseup(m, this);\r\n    }\r\n    _noop() { }\r\n    _updateForPlaying(t) {\r\n        if (this.isSolved()) {\r\n            this.onComplete(t);\r\n            return;\r\n        }\r\n        this.timer.update(t);\r\n    }\r\n    /** 게임을 시작한다. */\r\n    start(startTime) {\r\n        this.handlePlay = this._updateForPlaying;\r\n        this.playing = true;\r\n        this.timer.start(startTime);\r\n    }\r\n    /** 게임을 끝낸다. (게임 중단, 게임 클리어 모두 포함) */\r\n    end(endTime) {\r\n        this.handlePlay = this._noop;\r\n        this.playing = false;\r\n        this.timer.end(endTime);\r\n    }\r\n    /** 퍼즐이 완성되었는지 판단한다. */\r\n    isSolved() {\r\n        for (let i = 0; i < this.puzzleModel.length; i++) {\r\n            if (this.puzzleModel[i] != i)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    /** 퍼즐을 완성했을 때 실행된다. */\r\n    onComplete(t) {\r\n        this.end(t);\r\n        for (const cb of this.completeHandlers) {\r\n            cb();\r\n        }\r\n    }\r\n    /**\r\n     * 주어진 좌표를 클릭했을 때 마우스 드래그/놓기 이벤트를 활성화시킬 것인지 여부\r\n     * accept되지 않으면 **입력 자체가 완전히 무시되어 버린다.**\r\n     */\r\n    acceptCoordinate(x, y) {\r\n        // 퍼즐 밖 영역을 클릭하면 드래그로 이어지지 않는다.\r\n        if (x < this.left || x > this.right || y < this.top || y > this.bottom)\r\n            return false;\r\n        // 움직일 수 없는 조각을 클릭하면 드래그로 이어지지 않는다.\r\n        let [blankRow, blankCol] = this.rowColOfBlank;\r\n        let [row, col] = this.getRowColAt(x, y);\r\n        if ((blankRow == row) == (blankCol == col))\r\n            return false;\r\n        return true;\r\n    }\r\n    /**\r\n     * 매 rAF마다 호출된다.\r\n     *\r\n     * 이게 실행되기 전에 다음 것들이 이 순서대로 실행되었다.\r\n     * - input.dispatch()\r\n     * \t- dispatchMousedown, dispatchMouseup이 메시지 큐의 순서에 따라 모두 처리되었다.\r\n     * - input에 \"현재 상태\" 저장됨\r\n     *\r\n     * 이게 실행되고 나면 다음 것들이 차례로 실행될 것이다.\r\n     * - input.pulse()\r\n     *  - 현재 값이 이전 값으로(.beforeX, .beforeY) 전이된다.\r\n     * */\r\n    update(t, input) {\r\n        this.handlePlay(t);\r\n        if (this.grab.piece) {\r\n            this.grab.update(this, input);\r\n        }\r\n        for (const piece of this.pieces) {\r\n            if (piece.tag != this.blankTag)\r\n                piece.update(this);\r\n        }\r\n    }\r\n    /** 그린다. */\r\n    render(context) {\r\n        context.clearRect(0, 0, this.viewWidth, this.viewHeight);\r\n        for (const piece of this.pieces) {\r\n            if (piece.tag != this.blankTag)\r\n                piece.render(context, this.showLabel);\r\n        }\r\n        this.timer.render(context);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Game.ts\n");

/***/ }),

/***/ "./src/Grab.ts":
/*!*********************!*\
  !*** ./src/Grab.ts ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Grab; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n/* harmony import */ var _Physical__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Physical */ \"./src/Physical.ts\");\n\r\n\r\nconst maximumTapDistance = 31;\r\n/** 현재 누른 퍼즐 조각과 그 주변 조각에 대한 정보를 가지고 있다. */\r\nclass Grab {\r\n    constructor() {\r\n        /** 현재 누른 퍼즐 조각 */\r\n        this.piece = null;\r\n        /** 현재 누른 퍼즐 조각의 원래 행렬 위치 */\r\n        this.row = null;\r\n        this.col = null;\r\n        /** 마우스 버튼이 눌리는 그 순간에 현재 퍼즐 조각의 왼쪽 끝에 상대적인 마우스 위치 */\r\n        this.pieceOffsetX = null;\r\n        this.pieceOffsetY = null;\r\n        /**\r\n         * 현재 누른 퍼즐 조각과 같은 행 또는 열에 있는 조각들의 모음이다.\r\n         * 충돌 테스트는 여기 있는 조각들에 한해서 실행된다.\r\n         */\r\n        this.concern = null;\r\n        /**\r\n         * 현재 누른 퍼즐 조각을 어느 방향으로 움직일 수 있는지 나타낸다.\r\n         * 이 값이 'h'이면 퍼즐 조각을 좌우좌로 움직일 수 있고, 퍼즐 중에서 행(row)이 선택된 것이다.\r\n         * 'v'이면 퍼즐 조각을 세로로 움직일 수 있고, 열(col)이 선택된 것이다.\r\n         */\r\n        this.moveAxis = null;\r\n    }\r\n    /** (rAF-sync) 마우스를 누를 때 실행된다. */\r\n    onMousedown(m, game) {\r\n        // 여기서는 [blankRow, blankCol] != [row, col]이다. 만약 둘이 같다면 이것은 실행조차 되지 않는다.\r\n        let { startX: x, startY: y } = m;\r\n        let [blankRow, blankCol] = game.rowColOfBlank;\r\n        let [row, col] = game.getRowColAt(x, y);\r\n        if (blankRow == row) {\r\n            this.moveAxis = \"h\";\r\n            this.concern = game.getVector(blankRow, \"row\");\r\n        }\r\n        else if (blankCol == col) {\r\n            this.moveAxis = \"v\";\r\n            this.concern = game.getVector(blankCol, \"col\");\r\n        }\r\n        this.row = row;\r\n        this.col = col;\r\n        this.piece = game.getPieceAt(row, col);\r\n        this.pieceOffsetX = x - this.piece.x;\r\n        this.pieceOffsetY = y - this.piece.y;\r\n    }\r\n    /** (rAF-sync) 마우스를 놓을 때 실행된다. */\r\n    onMouseup(m, game) {\r\n        let { startX, startY, endX, endY, startTime, endTime } = m;\r\n        let distance = this.moveAxis == 'h' ? endX - startX : endY - startY;\r\n        /**\r\n         * # 탭인지 아닌지 판단하는 기준\r\n         *\r\n         * 다음 모두를 만족할 것:\r\n         * - 누르기 시간이 특정 수치를 넘지 않음 (기본 권장 시간 : 0.3초)\r\n         * - 변위가 특정 길이를 넘기지 않음\r\n         *\r\n         * ### 변위이어도 되나?\r\n         *\r\n         * 변위가 아닌 \"누적 거리\"로 판단하고자 한다면..\r\n         * 일단 일반적으로는 탭으로 판정되지 않을 만큼의 거리를 짧은 시간 안에 움직이는 것이 어렵다. 제한 거리의 값이 합리적이라면 말이지.\r\n         * 실제로 그렇게 하는 놈이 나온다면 그것은 기계적으로 마우스를 임의 조작한 것이라 판단한다.\r\n         * 그런 놈들을 상대하기 위해 누적 거리를 재느니 더 간단하게 계산할 수 있는 변위를 가지고 판단하겠다.\r\n         */\r\n        let isTap = (endTime - startTime < 300) && (Math.abs(distance) < maximumTapDistance);\r\n        if (isTap) {\r\n            // 퍼즐 조각을 클릭하기만 한 것이라면 모델에서 조각들을 직접 회전시키고, 뷰를 업데이트한다.\r\n            this.updateModelThenView(game);\r\n        }\r\n        else {\r\n            // 퍼즐 조각을 물리적으로 움직인 것이라면 영향을 받은 모든 조각들을 바른 위치에 놓은 후, 모델을 업데이트한다.\r\n            this.updateModelByView(game);\r\n        }\r\n        // 이제 마우스 놓기 처리가 완전히 끝났을 것이므로 데이터를 정리한다.\r\n        this.piece = null;\r\n        this.moveAxis = null;\r\n        this.concern = null;\r\n    }\r\n    /**\r\n     * 모델을 먼저 바꾸고, 뷰가 모델을 따라도록 한다.\r\n     * 이 놈은 마우스를 놓을 때에만 실행되며 마우스 놓기 핸들러와 동등한 것으로 본다.\r\n     */\r\n    updateModelThenView(game) {\r\n        /** 태그의 배열 */\r\n        const vector = [];\r\n        const start = this.moveAxis == 'h' ? this.row * game.size : this.col;\r\n        const increment = this.moveAxis == 'h' ? 1 : game.size;\r\n        // 퍼즐 모델에서 태그의 행벡터 또는 열벡터를 가져온다.\r\n        for (let i = 0; i < game.size; i++) {\r\n            let index = start + increment * i;\r\n            vector[i] = game.puzzleModel[index];\r\n        }\r\n        // 클릭한 퍼즐의 태그가 뭐였더라?\r\n        const currentTag = this.piece.tag;\r\n        const currentTagPos = vector.indexOf(currentTag);\r\n        // 빈칸의 위치를 얻는다.\r\n        const blankTagPos = vector.indexOf(game.blankTag);\r\n        // 빈칸이 현재 퍼즐 조각보다 뒤에(오른쪽 또는 아래) 있는지, 앞에 있는지(왼쪽 또는 위)를 판단한여 회전을 시킨다.\r\n        if (currentTagPos < blankTagPos) {\r\n            vector.splice(blankTagPos, 1);\r\n            vector.splice(currentTagPos, 0, game.blankTag);\r\n        }\r\n        else {\r\n            vector.splice(blankTagPos, 1);\r\n            vector.splice(currentTagPos, 0, game.blankTag);\r\n        }\r\n        // 변경된 모델을 기반으로 조각들의 위치를 업데이트한다.\r\n        for (let i = 0; i < game.size; i++) {\r\n            let index = start + increment * i;\r\n            game.puzzleModel[index] = vector[i];\r\n            let p = game.pieces[vector[i]];\r\n            let [row, col] = [Math.floor(index / game.size), index % game.size];\r\n            let [destX, destY] = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getPosition\"])(row, col, game.len, game.left, game.top, game.size);\r\n            p.destX = destX;\r\n            p.destY = destY;\r\n        }\r\n    }\r\n    /**\r\n     * 영향을 받은 퍼즐 조각들의 현재 위치(Piece.prototype.x, Piece.prototype.y)만을 가지고\r\n     * 모델을 업데이트한다. 이 놈은 마우스를 놓을 때에만 실행되며 마우스 놓기 핸들러와 동등한 것으로 본다.\r\n     * @deprecated 속도는 전혀 고려되지 않는다.\r\n     */\r\n    updateModelByView(game) {\r\n        let modelChanges = {};\r\n        for (const piece of this.concern) {\r\n            if (piece.tag == game.blankTag)\r\n                continue;\r\n            // 영향을 받은 모든 퍼즐 조각들의 모델 행렬 위치를 얻는다. \r\n            let [row, col] = piece.whereami(game.left, game.top, game.len, game.size);\r\n            // 변경점에 퍼즐 조각의 새로운 위치를 설정한다.\r\n            modelChanges[row * game.size + col] = piece.tag;\r\n            // 조각이 새로운 위치로 이동하도록 destX, destY를 설정한다.\r\n            let destX = game.left + col * game.pieceSize;\r\n            let destY = game.top + row * game.pieceSize;\r\n            piece.destX = destX;\r\n            piece.destY = destY;\r\n        }\r\n        // 옮기기 이후 모델의 변경점(changes)을 찾는다.\r\n        const start = this.moveAxis == 'h' ? this.row * game.size : this.col;\r\n        const increment = this.moveAxis == 'h' ? 1 : game.size;\r\n        // 빈칸을 찾는다.\r\n        for (let i = 0; i < game.size; i++) {\r\n            let index = start + increment * i;\r\n            if (!(index in modelChanges)) {\r\n                modelChanges[index] = game.blankTag;\r\n                break;\r\n            }\r\n        }\r\n        // 변경점을 퍼즐 모델에 적용시킨다.\r\n        for (const index in modelChanges) {\r\n            const tag = modelChanges[index];\r\n            game.puzzleModel[index] = tag;\r\n        }\r\n    }\r\n    /** 마우스를 누르고 있는 때에 한해 업데이트(rAF)가 발생할 때 호출된다. 즉, 실질적 업데이트와 같다. */\r\n    update(game, holdInput) {\r\n        if (this.moveAxis == \"h\" && holdInput.beforeX != null) {\r\n            let x = holdInput.x - this.pieceOffsetX;\r\n            this.piece.velX = x - this.piece.x;\r\n        }\r\n        else if (this.moveAxis == \"v\" && holdInput.beforeY != null) {\r\n            let y = holdInput.y - this.pieceOffsetY;\r\n            this.piece.velY = y - this.piece.y;\r\n        }\r\n        this.resolveCollision(game);\r\n    }\r\n    /**\r\n     * 현재 concern과 **grabbing에 대하여** 충돌 해결을 한 번 한다.\r\n     * 이것은 오로지\r\n     * # 잡고 있는 퍼즐만이 실제 속도를 가질 수 있다\r\n     * 는 것을 가정으로 실행된다.\r\n     *\r\n     * 이것은 단 한 번의 호출로 충돌을 해결할 수 있다.\r\n     *\r\n     * 위치관계를 이해하기 위해 현재상태를 보존할 필요성마저 없을 정도.\r\n     */\r\n    resolveCollision(game) {\r\n        const blankTag = game.blankTag;\r\n        const maxCount = this.concern.length;\r\n        // 이 충돌 테스트는 잡고 있는 조각을 중심으로 하여 이전 방향과 이후 방향으로 전파(propagation)된다.\r\n        const gIndex = this.moveAxis == \"h\" ? this.col : this.row;\r\n        const [pos, vel] = this.moveAxis == \"h\" ? [\"x\", \"velX\"] : [\"y\", \"velY\"];\r\n        // 현재 축 상에서 잡은 조각의 속도를 알아낸다.\r\n        const gVel = this.piece[vel];\r\n        const gVsign = Math.sign(gVel);\r\n        if (gVsign != 0) {\r\n            // 누른 조각이 움직이는 방향 위에 있는 조각들만 생각하면 된다.\t\t\r\n            for (let a = gIndex; (a >= 0) && (a < maxCount); a += gVsign) {\r\n                const A = this.concern[a];\r\n                if (A.tag == blankTag)\r\n                    continue;\r\n                for (let b = a + gVsign; (b >= 0) && (b < maxCount); b += gVsign) {\r\n                    const B = this.concern[b];\r\n                    if (B.tag == blankTag)\r\n                        continue;\r\n                    if (Object(_Physical__WEBPACK_IMPORTED_MODULE_1__[\"willHit\"])(A, B, this.moveAxis)) {\r\n                        B[pos] = A[pos] + A[vel] + B.size * gVsign;\r\n                    }\r\n                }\r\n            }\r\n            // 벽을 알아낸다.\r\n            // 잡고 있는 조각 외에는 움직이지 않으므로 잡고 있는 조각이 어디(위, 아래, 왼쪽, 오른쪽)를 향하는지에 대해서만 영향을 받는다.\r\n            // 끝점(right, bottom)에 대해서 size를 빼는 이유는, 비교를 용이하게 하기 위함이다.\r\n            let backpressureLimit;\r\n            if (this.moveAxis == \"h\") {\r\n                backpressureLimit = gVsign < 0 ? game.left : game.right - this.piece.size;\r\n            }\r\n            else {\r\n                backpressureLimit = gVsign < 0 ? game.top : game.bottom - this.piece.size;\r\n            }\r\n            // 벽에 가장 가까운 조각의 인덱스(빈칸 포함)를 알아낸다.\r\n            const [start, end] = gVsign < 0 ? [0, maxCount] : [maxCount - 1, -1];\r\n            for (let i = start; i != end; i -= gVsign) {\r\n                if (this.concern[i].tag == game.blankTag)\r\n                    continue;\r\n                const piece = this.concern[i];\r\n                /*\r\n                다음의 식은 각각의 경우에 따라 이렇게 해석된다.\r\n                - 왼쪽 진행인 경우 : concern[i][pos] = .x; gVsign = -1; backpressureLimit = left (+ N);\r\n                    => -.x + left > 0\r\n                    => .x < left\r\n                - 오른쪽 진행인 경우 : concern[i][pos] = .x; gVsign = 1; backpressureLimit = right - size (+ N);\r\n                    => x - right + size > 0\r\n                    => x > right - size\r\n                - 위로 진행인 경우 : concern[i][pos] = .y; gVsign = -1; backpressureLimit = top (+ N);\r\n                    => -.y + top > 0\r\n                    => .y < top\r\n                - 아래로 진행인 경우 : concern[i][pos] = .y; gVsign = 1; backpressureLimit = bottom - size (+ N);\r\n                    => .y - bottom + size > 0\r\n                    => .y > bottom - size\r\n                */\r\n                // 백프레스를 받을지 여부를 나타낸다. 백프레스를 받은 조각은 예외없이 조각의 움직임이 멈춘다.\r\n                if ((piece[pos] + piece[vel] - backpressureLimit) * gVsign > 0) {\r\n                    piece[pos] = backpressureLimit;\r\n                    piece[vel] = 0;\r\n                    backpressureLimit += this.piece.size * (-gVsign);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Grab.ts\n");

/***/ }),

/***/ "./src/Input.ts":
/*!**********************!*\
  !*** ./src/Input.ts ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MouseInput; });\n/**\r\n * 마우스 입력을 받아들여서 리스너에게 전달하는 클래스\r\n * 이 클래스는 requestAnimationFrame()을 사용한 업데이트 패턴에 특화된 구조를 가지고 있다.\r\n * 중요하고 양이 비교적 적은 이벤트(마우스 누름, 마우스 놓음)는 매 이벤트 루프마다 놓치지 않고 캡쳐해 두고, 압도적으로 많이 발생하고 중요하지 않은 이벤트(마우스 움직임)는 변화에 따라 \"현재 상태\"와 \"직전 상태\"만을 저장해 두고 rAF에서 그 상태를 참조하도록 하고 있다.\r\n */\r\nclass MouseInput {\r\n    constructor() {\r\n        /** 중요 이벤트(마우스 누름, 마우스 놓음)를 저장한 큐 */\r\n        this.messages = [];\r\n        /** 어떤 컨트롤(특히 뷰 기반 컨트롤)에 \"배율이 설정\"되었고, 리스너에게 모델 좌표계 기반으로 메시지를 보내고 싶을 때 모든 이벤트에 이 값이 곱해진다. */\r\n        this.scale = 1;\r\n        /**\r\n         * DOM 이벤트가 발생했을 때 임시적으로 캡쳐한 마우스 위치\r\n         * 이것은 이동, 누름, 놓음 모든 종류의 이벤트를 받아들인다\r\n         * Listener가 마우스 좌표를 받아들이면 퍼즐 조각에 바로 반영하지 않고, requestAnimationFrame이 돌아올 때까지 기다린다. (이벤트 핸들링이 rAF보다 훨씬 많이 발생한다.)\r\n         * 따라서 쏟아지는 이벤트로 인해 불필요하게 성능이 저하되는 것을 방지한다.\r\n         * 어떤 이벤트 루프에서 rAF가 발생하지 않으면 해당 루프로 받아들인 좌표는 버려지게 된다.\r\n         * */\r\n        this.inputX = null;\r\n        this.inputY = null;\r\n        /**\r\n         * inputX, inputY는 드래그를 하는 한에서는 현재 위치로 사용될 수 있으나,\r\n         * 드래그를 하지 않는 동안에는 마지막으로 마우스 이벤트가 일어난 지점이 계속 저장되어 있다.\r\n         * 게다가 update()에서 dispatch와 pulse는 마우스 눌림 여부와 관계없이 항상 실행된다.\r\n         * 따라서 inputX, inputY는 \"현재\"를 나타내기에는 부적절하다.\r\n        */\r\n        this.currentX = null;\r\n        this.currentY = null;\r\n        /** (private) 마지막 update(rAF)가 발생하기 직전의 마우스 위치 */\r\n        this._beforeX = null;\r\n        this._beforeY = null;\r\n        /**\r\n         * 마우스 누름 발생 시, 언젠가 발생할 마우스 떼기에 대응하여 임시로 메시지를 만들어 저장해 둘 배열\r\n         * messagePool[n]은 n번 마우스 버튼 누름에 대응하는 임시 마우스 떼기 메시지이다.\r\n         * n번 마우스 버튼 떼기가 발생하면 messagePool[n]에 있는 메시지를 꺼내서 end 값을 입력하고 큐에 넣는다.\r\n         * */\r\n        this.messagePool = [];\r\n        this.mousedown = (ev) => {\r\n            ev.preventDefault();\r\n            if (this.listener.acceptCoordinate(ev.offsetX * this.scale, ev.offsetY * this.scale)) {\r\n                // pulse를 맞으면 currentX는 beforeX가 된다.\r\n                // 따라서 rAF가 발생하는 시점에서 이전 위치는 마우스 누름 위치로 간주된다.\r\n                this.currentX = ev.offsetX * this.scale;\r\n                this.currentY = ev.offsetY * this.scale;\r\n                // 이것과 rAF 사이에 move가 발생하지 않으면 rAF 발생 시 혀재 위치 또한 마우스 누름 위치가 된다.\r\n                // rAF 발생 전에 move가 먼저 발생하면 input값을 덮어써서 걔들이 current값이 되겠지?\r\n                this.inputX = ev.offsetX * this.scale;\r\n                this.inputY = ev.offsetY * this.scale;\r\n                this.source.addEventListener('mousemove', this.mousemove);\r\n                document.addEventListener('mouseup', this.mouseup);\r\n                // 마우스 누름 이벤트를 입력한다.\r\n                this.messages.push({\r\n                    type: \"mousedown\",\r\n                    startX: ev.offsetX * this.scale,\r\n                    startY: ev.offsetY * this.scale,\r\n                    startTime: ev.timeStamp\r\n                });\r\n                // down-up pair를 위해 마우스 누름 위치를 저장한다.\r\n                this.messagePool[ev.button] = {\r\n                    type: \"mouseup\",\r\n                    startX: ev.offsetX * this.scale,\r\n                    startY: ev.offsetY * this.scale,\r\n                    startTime: ev.timeStamp\r\n                };\r\n            }\r\n            return false;\r\n        };\r\n        this.mousemove = (ev) => {\r\n            this.inputX = ev.offsetX * this.scale;\r\n            this.inputY = ev.offsetY * this.scale;\r\n        };\r\n        this.mouseup = (ev) => {\r\n            /* MouseEvent.offsetX는 source 상대 위치이다. 띠용! */\r\n            let x = ev.offsetX * this.scale;\r\n            let y = ev.offsetY * this.scale;\r\n            // 마우스 누름 당시 저장했던 마우스 놓기 메시지를 가져온다.\r\n            let message = this.messagePool[ev.button];\r\n            delete this.messagePool[ev.button];\r\n            // 임시 메시지에 실제 마우스 놓기 데이터를 입력하여 메시지를 완성시킨다.\r\n            message.endX = x;\r\n            message.endY = y;\r\n            message.endTime = ev.timeStamp;\r\n            // 메시지를 큐에 입력한다.\r\n            this.messages.push(message);\r\n            // 현재 rAF의 마우스 위치를 떼기 위치로 간주한다.\r\n            // input에다 좌표를 넣어두면 rAF 발생 시 current로 내려가겠지?\r\n            this.inputX = x;\r\n            this.inputY = y;\r\n            this.source.removeEventListener('mousemove', this.mousemove);\r\n            document.removeEventListener('mouseup', this.mouseup);\r\n        };\r\n    }\r\n    /** 현재 마우스 위치 */\r\n    get x() { return this.currentX; }\r\n    get y() { return this.currentY; }\r\n    /** 마지막 update(rAF)가 발생하기 직전의 마우스 위치 */\r\n    get beforeX() { return this._beforeX; }\r\n    get beforeY() { return this._beforeY; }\r\n    /** update(rAF) 간의 x, y 변화량 */\r\n    get moveX() {\r\n        return (this.beforeX != null) && (this.currentX != null) ? (this.currentX - this._beforeX) : 0;\r\n    }\r\n    get moveY() {\r\n        return (this.beforeY != null) && (this.currentY != null) ? (this.currentY - this._beforeY) : 0;\r\n    }\r\n    /** 입력 컴포넌트를 뷰에 연결한다. */\r\n    connect(source, listener) {\r\n        this.disconnect();\r\n        this.source = source;\r\n        this.listener = listener;\r\n        this.source.addEventListener('mousedown', this.mousedown);\r\n    }\r\n    /** 입력 컴포넌트 연결을 해제한다. */\r\n    disconnect() {\r\n        let source = this.source;\r\n        if (source) {\r\n            source.removeEventListener('mousedown', this.mousedown);\r\n            source.removeEventListener('mousemove', this.mousemove);\r\n            document.removeEventListener('mouseup', this.mouseup);\r\n        }\r\n        this.source = null;\r\n        this.listener = null;\r\n    }\r\n    /**\r\n     * (rAF) 큐에 있는 메시지를 모두 정리하고, 상태를 전이시킨다.\r\n     *\r\n     * # 중요 : 디스패치는 currentX|Y, beforeX|Y, moveX|Y와는 좆도 상관 없다고 씨발놈아!!\r\n     * */\r\n    update() {\r\n        // dispatch\r\n        let message;\r\n        while ((message = this.messages.shift()) != null) {\r\n            switch (message.type) {\r\n                case \"mousedown\":\r\n                    this.listener.dispatchMousedown(message);\r\n                    break;\r\n                case \"mouseup\":\r\n                    this.listener.dispatchMouseup(message);\r\n                    break;\r\n            }\r\n        }\r\n        // pulse\r\n        this._beforeX = this.currentX;\r\n        this._beforeY = this.currentY;\r\n        this.currentX = this.inputX;\r\n        this.currentY = this.inputY;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Input.ts\n");

/***/ }),

/***/ "./src/Physical.ts":
/*!*************************!*\
  !*** ./src/Physical.ts ***!
  \*************************/
/*! exports provided: willHit, clone, assign */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"willHit\", function() { return willHit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assign\", function() { return assign; });\n/** 두 개의 박스 a, b에 대해 어떠한 축 위에서의 **1차원 충돌**을 예측한다. */\r\nfunction willHit(a, b, direction) {\r\n    if (a == b)\r\n        return false;\r\n    let aStart;\r\n    let aEnd;\r\n    let bStart;\r\n    let bEnd;\r\n    if (direction == \"h\") {\r\n        aStart = Math.min(a.x, a.x + a.velX);\r\n        aEnd = Math.max(a.x + a.size, a.x + a.size + a.velX);\r\n        bStart = Math.min(b.x, b.x + b.velX);\r\n        bEnd = Math.max(b.x + b.size, b.x + b.size + b.velX);\r\n    }\r\n    else if (direction == \"v\") {\r\n        aStart = Math.min(a.y, a.y + a.velY);\r\n        aEnd = Math.max(a.y + a.size, a.y + a.size + a.velY);\r\n        bStart = Math.min(b.y, b.y + b.velY);\r\n        bEnd = Math.max(b.y + b.size, b.y + b.size + b.velY);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n    return aStart < bEnd && bStart < aEnd;\r\n}\r\n/** Physical의 속성을 가지고 있는 어떤 객체에서 Physical의 속성만을 뽑아내 복사한다. */\r\nfunction clone(src) {\r\n    let { x, y, size, velX, velY } = src;\r\n    return { x, y, size, velX, velY };\r\n}\r\n/** target의 각 Physical 속성이 src의 것과 같게 한다. */\r\nfunction assign(target, src) {\r\n    target.x = src.x;\r\n    target.y = src.y;\r\n    // 아직까진 모든 조각의 크기가 같으므로 생략한다.\r\n    // target.size = src.size\r\n    target.velX = src.velX;\r\n    target.velY = src.velY;\r\n}\r\nwindow.willHit = willHit;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvUGh5c2ljYWwudHM/NGU4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFNBQVMseUJBQXlCO0FBQ2xDLFlBQVk7QUFDWjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vc3JjL1BoeXNpY2FsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIOuRkCDqsJzsnZgg67CV7IqkIGEsIGLsl5Ag64yA7ZW0IOyWtOuWoO2VnCDstpUg7JyE7JeQ7ISc7J2YICoqMeywqOybkCDstqnrj4wqKuydhCDsmIjsuKHtlZzri6QuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB3aWxsSGl0KGEsIGIsIGRpcmVjdGlvbikge1xyXG4gICAgaWYgKGEgPT0gYilcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICBsZXQgYVN0YXJ0O1xyXG4gICAgbGV0IGFFbmQ7XHJcbiAgICBsZXQgYlN0YXJ0O1xyXG4gICAgbGV0IGJFbmQ7XHJcbiAgICBpZiAoZGlyZWN0aW9uID09IFwiaFwiKSB7XHJcbiAgICAgICAgYVN0YXJ0ID0gTWF0aC5taW4oYS54LCBhLnggKyBhLnZlbFgpO1xyXG4gICAgICAgIGFFbmQgPSBNYXRoLm1heChhLnggKyBhLnNpemUsIGEueCArIGEuc2l6ZSArIGEudmVsWCk7XHJcbiAgICAgICAgYlN0YXJ0ID0gTWF0aC5taW4oYi54LCBiLnggKyBiLnZlbFgpO1xyXG4gICAgICAgIGJFbmQgPSBNYXRoLm1heChiLnggKyBiLnNpemUsIGIueCArIGIuc2l6ZSArIGIudmVsWCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChkaXJlY3Rpb24gPT0gXCJ2XCIpIHtcclxuICAgICAgICBhU3RhcnQgPSBNYXRoLm1pbihhLnksIGEueSArIGEudmVsWSk7XHJcbiAgICAgICAgYUVuZCA9IE1hdGgubWF4KGEueSArIGEuc2l6ZSwgYS55ICsgYS5zaXplICsgYS52ZWxZKTtcclxuICAgICAgICBiU3RhcnQgPSBNYXRoLm1pbihiLnksIGIueSArIGIudmVsWSk7XHJcbiAgICAgICAgYkVuZCA9IE1hdGgubWF4KGIueSArIGIuc2l6ZSwgYi55ICsgYi5zaXplICsgYi52ZWxZKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiBhU3RhcnQgPCBiRW5kICYmIGJTdGFydCA8IGFFbmQ7XHJcbn1cclxuLyoqIFBoeXNpY2Fs7J2YIOyGjeyEseydhCDqsIDsp4Dqs6Ag7J6I64qUIOyWtOuWpCDqsJ3ssrTsl5DshJwgUGh5c2ljYWzsnZgg7IaN7ISx66eM7J2EIOu9keyVhOuCtCDrs7XsgqztlZzri6QuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjbG9uZShzcmMpIHtcclxuICAgIGxldCB7IHgsIHksIHNpemUsIHZlbFgsIHZlbFkgfSA9IHNyYztcclxuICAgIHJldHVybiB7IHgsIHksIHNpemUsIHZlbFgsIHZlbFkgfTtcclxufVxyXG4vKiogdGFyZ2V07J2YIOqwgSBQaHlzaWNhbCDsho3shLHsnbQgc3Jj7J2YIOqyg+qzvCDqsJnqsowg7ZWc64ukLiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc3JjKSB7XHJcbiAgICB0YXJnZXQueCA9IHNyYy54O1xyXG4gICAgdGFyZ2V0LnkgPSBzcmMueTtcclxuICAgIC8vIOyVhOyngeq5jOynhCDrqqjrk6Ag7KGw6rCB7J2YIO2BrOq4sOqwgCDqsJnsnLzrr4DroZwg7IOd65617ZWc64ukLlxyXG4gICAgLy8gdGFyZ2V0LnNpemUgPSBzcmMuc2l6ZVxyXG4gICAgdGFyZ2V0LnZlbFggPSBzcmMudmVsWDtcclxuICAgIHRhcmdldC52ZWxZID0gc3JjLnZlbFk7XHJcbn1cclxud2luZG93LndpbGxIaXQgPSB3aWxsSGl0O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Physical.ts\n");

/***/ }),

/***/ "./src/Piece.ts":
/*!**********************!*\
  !*** ./src/Piece.ts ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Piece; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n\r\nconst AXIS = {\r\n    h: {\r\n        axis: 'x',\r\n        start: 'left',\r\n        end: 'right'\r\n    },\r\n    v: {\r\n        axis: 'y',\r\n        start: 'top',\r\n        end: 'bottom'\r\n    }\r\n};\r\nclass Piece {\r\n    constructor(tag, texture, srcX, srcY, srcD, viewD) {\r\n        /** 퍼즐 조각의 이동 속도 (업데이트에 이용된다. 아님 말고.) */\r\n        this.velX = 0;\r\n        this.velY = 0;\r\n        /** 퍼즐 조각이 혼자서 움직일 때 (마우스를 놓을 때) 퍼즐 조각이 이동하는 경로 */\r\n        this.destX = null;\r\n        this.destY = null;\r\n        this.tag = tag;\r\n        this.texture = texture;\r\n        this.sx = srcX;\r\n        this.sy = srcY;\r\n        this.srcSize = srcD;\r\n        this.size = viewD;\r\n    }\r\n    /** 퍼즐 조각의 목표 위치/현재 위치를 기반으로 퍼즐의 행렬 위치를 찾아낸다. */\r\n    whereami(left, top, boardSize, divideBy) {\r\n        let x = (this.destX != null ? this.destX : this.x) + this.size / 2;\r\n        let y = (this.destY != null ? this.destY : this.y) + this.size / 2;\r\n        return Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getRowCol\"])(x, y, boardSize, left, top, divideBy);\r\n    }\r\n    /**\r\n     * 퍼즐 조각을 한 방향으로 움직이기만 한다.\r\n     * 위에 것과는 다르게 재귀를 사용하지 않는다.\r\n     */\r\n    move(dist, direction, game, concern) {\r\n        const { axis, start, end } = AXIS[direction];\r\n    }\r\n    /**\r\n     * 업데이트한다.\r\n     * 빈칸을 나타내는 조각은 업데이트되지 않는다.\r\n     *\r\n     * 일단, 업데이트 자체는 드래그 여부와 상관없이 모든 조각에 대해 항상 실행된다.\r\n    */\r\n    update(game) {\r\n        // (참고 : 마우스 버튼을 누르는 순간 모든 조각의 destX, destY가 null이 되고 velX, velY 또한 0이 되므로 조각을 드래그하는 중에는 이 블록과 저 아래에 destY 블록까지 무시된다.)\r\n        // 아직 목표 x위치에 도달하지 않았다면\r\n        if (this.destX != null) {\r\n            let distX = this.destX - this.x;\r\n            // 목표 위치에 도달할 수 있도록 속도를 설정해준다.\r\n            this.velX = this.size / 6 * Math.sign(distX);\r\n            // 조각이 목표에 충분히 가까이 접근했다면 목표 위치에 안착시키고, 속도를 없앤다.\r\n            if ((Math.abs(distX) < Math.abs(this.velX)) || (Math.abs(distX) < 0.1)) {\r\n                this.x = this.destX;\r\n                this.destX = null;\r\n                if (Math.abs(this.velX) >= 3) {\r\n                    // tick!\r\n                }\r\n                this.velX = 0;\r\n            }\r\n        }\r\n        if (this.destY != null) {\r\n            let distY = this.destY - this.y;\r\n            this.velY = this.size / 6 * Math.sign(distY);\r\n            if ((Math.abs(distY) < Math.abs(this.velY)) || (Math.abs(distY) < 0.1)) {\r\n                this.y = this.destY;\r\n                this.destY = null;\r\n                if (Math.abs(this.velY) >= 3) {\r\n                    // tick!\r\n                }\r\n                this.velY = 0;\r\n            }\r\n        }\r\n        this.x += this.velX;\r\n        this.y += this.velY;\r\n        if (this.x < game.left) {\r\n            this.x = game.left;\r\n            this.velX = 0;\r\n        }\r\n        else if (this.x + this.size > game.right) {\r\n            this.x = game.right - this.size;\r\n            this.velX = 0;\r\n        }\r\n        if (this.y < game.top) {\r\n            this.y = game.top;\r\n            this.velY = 0;\r\n        }\r\n        else if (this.y + this.size > game.bottom) {\r\n            this.y = game.bottom - this.size;\r\n            this.velY = 0;\r\n        }\r\n    }\r\n    /**\r\n     * 렌더링한다.\r\n     * 빈칸을 나타내는 조각에 대해서는 메서드가 아예 실행되지 않는다.\r\n     */\r\n    render(context, showLabel = true) {\r\n        context.fillStyle = 'white';\r\n        context.lineWidth = 1;\r\n        context.strokeRect(this.x, this.y, this.size, this.size);\r\n        context.fillRect(this.x, this.y, this.size, this.size);\r\n        context.drawImage(this.texture, this.sx, this.sy, this.srcSize, this.srcSize, this.x, this.y, this.size, this.size);\r\n        if (showLabel) {\r\n            let fontSize = Math.floor(this.size / 3);\r\n            context.font = fontSize + 'px \"Exo 2\"';\r\n            context.lineWidth = 3;\r\n            let { width } = context.measureText(this.label);\r\n            let x = this.x + width / 2 + 4;\r\n            let y = this.y + this.size / 6 + 2;\r\n            context.strokeText(this.label, x, y);\r\n            context.fillText(this.label, x, y);\r\n        }\r\n    }\r\n    /**\r\n     * 퍼즐 조각을 목표 위치로 즉시 이동시키고, 속도를 없앤다.\r\n     */\r\n    getIntoPositionNow() {\r\n        if (this.destX != null) {\r\n            this.x = this.destX;\r\n            this.destX = null;\r\n            this.velX = 0;\r\n        }\r\n        if (this.destY != null) {\r\n            this.y = this.destY;\r\n            this.destY = null;\r\n            this.velY = 0;\r\n        }\r\n    }\r\n    /** x에서 x + velX로 또는 y에서 y + velY로 이동하는 경로에 부딪힐 다른 조각들이 있는지 판단한다. */\r\n    willHit(concern, direction) {\r\n        let vector = [];\r\n        if (direction == \"h\") {\r\n            for (const piece of concern) {\r\n                // if (piece.physical.x + piece.physical.size )\r\n            }\r\n        }\r\n        else if (direction == \"v\") {\r\n        }\r\n        return vector;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvUGllY2UudHM/NTE3OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0RBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBbUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9zcmMvUGllY2UudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRSb3dDb2wgfSBmcm9tIFwiLi91dGlsc1wiO1xyXG5jb25zdCBBWElTID0ge1xyXG4gICAgaDoge1xyXG4gICAgICAgIGF4aXM6ICd4JyxcclxuICAgICAgICBzdGFydDogJ2xlZnQnLFxyXG4gICAgICAgIGVuZDogJ3JpZ2h0J1xyXG4gICAgfSxcclxuICAgIHY6IHtcclxuICAgICAgICBheGlzOiAneScsXHJcbiAgICAgICAgc3RhcnQ6ICd0b3AnLFxyXG4gICAgICAgIGVuZDogJ2JvdHRvbSdcclxuICAgIH1cclxufTtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGllY2Uge1xyXG4gICAgY29uc3RydWN0b3IodGFnLCB0ZXh0dXJlLCBzcmNYLCBzcmNZLCBzcmNELCB2aWV3RCkge1xyXG4gICAgICAgIC8qKiDtjbzsppAg7KGw6rCB7J2YIOydtOuPmSDsho3rj4QgKOyXheuNsOydtO2KuOyXkCDsnbTsmqnrkJzri6QuIOyVhOuLmCDrp5Dqs6AuKSAqL1xyXG4gICAgICAgIHRoaXMudmVsWCA9IDA7XHJcbiAgICAgICAgdGhpcy52ZWxZID0gMDtcclxuICAgICAgICAvKiog7Y287KaQIOyhsOqwgeydtCDtmLzsnpDshJwg7JuA7KeB7J28IOuVjCAo66eI7Jqw7Iqk66W8IOuGk+ydhCDrlYwpIO2NvOymkCDsobDqsIHsnbQg7J2064+Z7ZWY64qUIOqyveuhnCAqL1xyXG4gICAgICAgIHRoaXMuZGVzdFggPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZGVzdFkgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudGFnID0gdGFnO1xyXG4gICAgICAgIHRoaXMudGV4dHVyZSA9IHRleHR1cmU7XHJcbiAgICAgICAgdGhpcy5zeCA9IHNyY1g7XHJcbiAgICAgICAgdGhpcy5zeSA9IHNyY1k7XHJcbiAgICAgICAgdGhpcy5zcmNTaXplID0gc3JjRDtcclxuICAgICAgICB0aGlzLnNpemUgPSB2aWV3RDtcclxuICAgIH1cclxuICAgIC8qKiDtjbzsppAg7KGw6rCB7J2YIOuqqe2RnCDsnITsuZgv7ZiE7J6sIOychOy5mOulvCDquLDrsJjsnLzroZwg7Y287KaQ7J2YIO2WieugrCDsnITsuZjrpbwg7LC+7JWE64K464ukLiAqL1xyXG4gICAgd2hlcmVhbWkobGVmdCwgdG9wLCBib2FyZFNpemUsIGRpdmlkZUJ5KSB7XHJcbiAgICAgICAgbGV0IHggPSAodGhpcy5kZXN0WCAhPSBudWxsID8gdGhpcy5kZXN0WCA6IHRoaXMueCkgKyB0aGlzLnNpemUgLyAyO1xyXG4gICAgICAgIGxldCB5ID0gKHRoaXMuZGVzdFkgIT0gbnVsbCA/IHRoaXMuZGVzdFkgOiB0aGlzLnkpICsgdGhpcy5zaXplIC8gMjtcclxuICAgICAgICByZXR1cm4gZ2V0Um93Q29sKHgsIHksIGJvYXJkU2l6ZSwgbGVmdCwgdG9wLCBkaXZpZGVCeSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIO2NvOymkCDsobDqsIHsnYQg7ZWcIOuwqe2WpeycvOuhnCDsm4Dsp4HsnbTquLDrp4wg7ZWc64ukLlxyXG4gICAgICog7JyE7JeQIOqyg+qzvOuKlCDri6TrpbTqsowg7J6s6reA66W8IOyCrOyaqe2VmOyngCDslYrripTri6QuXHJcbiAgICAgKi9cclxuICAgIG1vdmUoZGlzdCwgZGlyZWN0aW9uLCBnYW1lLCBjb25jZXJuKSB7XHJcbiAgICAgICAgY29uc3QgeyBheGlzLCBzdGFydCwgZW5kIH0gPSBBWElTW2RpcmVjdGlvbl07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOyXheuNsOydtO2KuO2VnOuLpC5cclxuICAgICAqIOu5iOy5uOydhCDrgpjtg4DrgrTripQg7KGw6rCB7J2AIOyXheuNsOydtO2KuOuQmOyngCDslYrripTri6QuXHJcbiAgICAgKlxyXG4gICAgICog7J2864uoLCDsl4XrjbDsnbTtirgg7J6Q7LK064qUIOuTnOuemOq3uCDsl6zrtoDsmYAg7IOB6rSA7JeG7J20IOuqqOuToCDsobDqsIHsl5Ag64yA7ZW0IO2VreyDgSDsi6TtlonrkJzri6QuXHJcbiAgICAqL1xyXG4gICAgdXBkYXRlKGdhbWUpIHtcclxuICAgICAgICAvLyAo7LC46rOgIDog66eI7Jqw7IqkIOuyhO2KvOydhCDriITrpbTripQg7Iic6rCEIOuqqOuToCDsobDqsIHsnZggZGVzdFgsIGRlc3RZ6rCAIG51bGzsnbQg65CY6rOgIHZlbFgsIHZlbFkg65iQ7ZWcIDDsnbQg65CY66+A66GcIOyhsOqwgeydhCDrk5zrnpjqt7jtlZjripQg7KSR7JeQ64qUIOydtCDruJTroZ3qs7wg7KCAIOyVhOuemOyXkCBkZXN0WSDruJTroZ3quYzsp4Ag66y07Iuc65Cc64ukLilcclxuICAgICAgICAvLyDslYTsp4Eg66qp7ZGcIHjsnITsuZjsl5Ag64+E64us7ZWY7KeAIOyViuyVmOuLpOuptFxyXG4gICAgICAgIGlmICh0aGlzLmRlc3RYICE9IG51bGwpIHtcclxuICAgICAgICAgICAgbGV0IGRpc3RYID0gdGhpcy5kZXN0WCAtIHRoaXMueDtcclxuICAgICAgICAgICAgLy8g66qp7ZGcIOychOy5mOyXkCDrj4Tri6ztlaAg7IiYIOyeiOuPhOuhnSDsho3rj4Trpbwg7ISk7KCV7ZW07KSA64ukLlxyXG4gICAgICAgICAgICB0aGlzLnZlbFggPSB0aGlzLnNpemUgLyA2ICogTWF0aC5zaWduKGRpc3RYKTtcclxuICAgICAgICAgICAgLy8g7KGw6rCB7J20IOuqqe2RnOyXkCDstqnrtoTtnogg6rCA6rmM7J20IOygkeq3vO2WiOuLpOuptCDrqqntkZwg7JyE7LmY7JeQIOyViOywqeyLnO2CpOqzoCwg7IaN64+E66W8IOyXhuyVpOuLpC5cclxuICAgICAgICAgICAgaWYgKChNYXRoLmFicyhkaXN0WCkgPCBNYXRoLmFicyh0aGlzLnZlbFgpKSB8fCAoTWF0aC5hYnMoZGlzdFgpIDwgMC4xKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy54ID0gdGhpcy5kZXN0WDtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVzdFggPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHRoaXMudmVsWCkgPj0gMykge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRpY2shXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnZlbFggPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmRlc3RZICE9IG51bGwpIHtcclxuICAgICAgICAgICAgbGV0IGRpc3RZID0gdGhpcy5kZXN0WSAtIHRoaXMueTtcclxuICAgICAgICAgICAgdGhpcy52ZWxZID0gdGhpcy5zaXplIC8gNiAqIE1hdGguc2lnbihkaXN0WSk7XHJcbiAgICAgICAgICAgIGlmICgoTWF0aC5hYnMoZGlzdFkpIDwgTWF0aC5hYnModGhpcy52ZWxZKSkgfHwgKE1hdGguYWJzKGRpc3RZKSA8IDAuMSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMueSA9IHRoaXMuZGVzdFk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRlc3RZID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnZlbFkpID49IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyB0aWNrIVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy52ZWxZID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnggKz0gdGhpcy52ZWxYO1xyXG4gICAgICAgIHRoaXMueSArPSB0aGlzLnZlbFk7XHJcbiAgICAgICAgaWYgKHRoaXMueCA8IGdhbWUubGVmdCkge1xyXG4gICAgICAgICAgICB0aGlzLnggPSBnYW1lLmxlZnQ7XHJcbiAgICAgICAgICAgIHRoaXMudmVsWCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMueCArIHRoaXMuc2l6ZSA+IGdhbWUucmlnaHQpIHtcclxuICAgICAgICAgICAgdGhpcy54ID0gZ2FtZS5yaWdodCAtIHRoaXMuc2l6ZTtcclxuICAgICAgICAgICAgdGhpcy52ZWxYID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMueSA8IGdhbWUudG9wKSB7XHJcbiAgICAgICAgICAgIHRoaXMueSA9IGdhbWUudG9wO1xyXG4gICAgICAgICAgICB0aGlzLnZlbFkgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLnkgKyB0aGlzLnNpemUgPiBnYW1lLmJvdHRvbSkge1xyXG4gICAgICAgICAgICB0aGlzLnkgPSBnYW1lLmJvdHRvbSAtIHRoaXMuc2l6ZTtcclxuICAgICAgICAgICAgdGhpcy52ZWxZID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOugjOuNlOunge2VnOuLpC5cclxuICAgICAqIOu5iOy5uOydhCDrgpjtg4DrgrTripQg7KGw6rCB7JeQIOuMgO2VtOyEnOuKlCDrqZTshJzrk5zqsIAg7JWE7JiIIOyLpO2WieuQmOyngCDslYrripTri6QuXHJcbiAgICAgKi9cclxuICAgIHJlbmRlcihjb250ZXh0LCBzaG93TGFiZWwgPSB0cnVlKSB7XHJcbiAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSAnd2hpdGUnO1xyXG4gICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gMTtcclxuICAgICAgICBjb250ZXh0LnN0cm9rZVJlY3QodGhpcy54LCB0aGlzLnksIHRoaXMuc2l6ZSwgdGhpcy5zaXplKTtcclxuICAgICAgICBjb250ZXh0LmZpbGxSZWN0KHRoaXMueCwgdGhpcy55LCB0aGlzLnNpemUsIHRoaXMuc2l6ZSk7XHJcbiAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UodGhpcy50ZXh0dXJlLCB0aGlzLnN4LCB0aGlzLnN5LCB0aGlzLnNyY1NpemUsIHRoaXMuc3JjU2l6ZSwgdGhpcy54LCB0aGlzLnksIHRoaXMuc2l6ZSwgdGhpcy5zaXplKTtcclxuICAgICAgICBpZiAoc2hvd0xhYmVsKSB7XHJcbiAgICAgICAgICAgIGxldCBmb250U2l6ZSA9IE1hdGguZmxvb3IodGhpcy5zaXplIC8gMyk7XHJcbiAgICAgICAgICAgIGNvbnRleHQuZm9udCA9IGZvbnRTaXplICsgJ3B4IFwiRXhvIDJcIic7XHJcbiAgICAgICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gMztcclxuICAgICAgICAgICAgbGV0IHsgd2lkdGggfSA9IGNvbnRleHQubWVhc3VyZVRleHQodGhpcy5sYWJlbCk7XHJcbiAgICAgICAgICAgIGxldCB4ID0gdGhpcy54ICsgd2lkdGggLyAyICsgNDtcclxuICAgICAgICAgICAgbGV0IHkgPSB0aGlzLnkgKyB0aGlzLnNpemUgLyA2ICsgMjtcclxuICAgICAgICAgICAgY29udGV4dC5zdHJva2VUZXh0KHRoaXMubGFiZWwsIHgsIHkpO1xyXG4gICAgICAgICAgICBjb250ZXh0LmZpbGxUZXh0KHRoaXMubGFiZWwsIHgsIHkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog7Y287KaQIOyhsOqwgeydhCDrqqntkZwg7JyE7LmY66GcIOymieyLnCDsnbTrj5nsi5ztgqTqs6AsIOyGjeuPhOulvCDsl4bslaTri6QuXHJcbiAgICAgKi9cclxuICAgIGdldEludG9Qb3NpdGlvbk5vdygpIHtcclxuICAgICAgICBpZiAodGhpcy5kZXN0WCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMueCA9IHRoaXMuZGVzdFg7XHJcbiAgICAgICAgICAgIHRoaXMuZGVzdFggPSBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLnZlbFggPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5kZXN0WSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMueSA9IHRoaXMuZGVzdFk7XHJcbiAgICAgICAgICAgIHRoaXMuZGVzdFkgPSBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLnZlbFkgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKiB47JeQ7IScIHggKyB2ZWxY66GcIOuYkOuKlCB57JeQ7IScIHkgKyB2ZWxZ66GcIOydtOuPme2VmOuKlCDqsr3roZzsl5Ag67aA65Sq7Z6QIOuLpOuluCDsobDqsIHrk6TsnbQg7J6I64qU7KeAIO2MkOuLqO2VnOuLpC4gKi9cclxuICAgIHdpbGxIaXQoY29uY2VybiwgZGlyZWN0aW9uKSB7XHJcbiAgICAgICAgbGV0IHZlY3RvciA9IFtdO1xyXG4gICAgICAgIGlmIChkaXJlY3Rpb24gPT0gXCJoXCIpIHtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBwaWVjZSBvZiBjb25jZXJuKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBpZiAocGllY2UucGh5c2ljYWwueCArIHBpZWNlLnBoeXNpY2FsLnNpemUgKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBcInZcIikge1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdmVjdG9yO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Piece.ts\n");

/***/ }),

/***/ "./src/PuzzleSet.ts":
/*!**************************!*\
  !*** ./src/PuzzleSet.ts ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PuzzleSet; });\n/**\r\n * PuzzleSet은 그림, 정사각형 영역, 해결 가능 여부를 모아놓은 것이다.\r\n * 행이나 열을 뒤집는 기능 따위는 없다.\r\n */\r\nclass PuzzleSet {\r\n    /**\r\n     * 행, 열 번호로 이미지에서 참조할 좌표를 찾는다.\r\n     */\r\n    getPosition(row, col, divideBy) {\r\n        let d = this.size / divideBy;\r\n        return [this.left + col * d, this.top + row * d];\r\n    }\r\n    waitForImageLoad() {\r\n        this.texture = new Image();\r\n        this.texture.src = '/img/' + this.img;\r\n        if (this.texture.complete) {\r\n            return Promise.resolve();\r\n        }\r\n        return new Promise((a, b) => {\r\n            this.texture.onload = ev => {\r\n                a();\r\n            };\r\n            this.texture.onerror = b;\r\n        });\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvUHV6emxlU2V0LnRzP2VmMjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsImZpbGUiOiIuL3NyYy9QdXp6bGVTZXQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUHV6emxlU2V07J2AIOq3uOumvCwg7KCV7IKs6rCB7ZiVIOyYgeyXrSwg7ZW06rKwIOqwgOuKpSDsl6zrtoDrpbwg66qo7JWE64aT7J2AIOqyg+ydtOuLpC5cclxuICog7ZaJ7J2064KYIOyXtOydhCDrkqTsp5HripQg6riw64qlIOuUsOychOuKlCDsl4bri6QuXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQdXp6bGVTZXQge1xyXG4gICAgLyoqXHJcbiAgICAgKiDtloksIOyXtCDrsojtmLjroZwg7J2066+47KeA7JeQ7IScIOywuOyhsO2VoCDsooztkZzrpbwg7LC+64qU64ukLlxyXG4gICAgICovXHJcbiAgICBnZXRQb3NpdGlvbihyb3csIGNvbCwgZGl2aWRlQnkpIHtcclxuICAgICAgICBsZXQgZCA9IHRoaXMuc2l6ZSAvIGRpdmlkZUJ5O1xyXG4gICAgICAgIHJldHVybiBbdGhpcy5sZWZ0ICsgY29sICogZCwgdGhpcy50b3AgKyByb3cgKiBkXTtcclxuICAgIH1cclxuICAgIHdhaXRGb3JJbWFnZUxvYWQoKSB7XHJcbiAgICAgICAgdGhpcy50ZXh0dXJlID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgdGhpcy50ZXh0dXJlLnNyYyA9ICcvaW1nLycgKyB0aGlzLmltZztcclxuICAgICAgICBpZiAodGhpcy50ZXh0dXJlLmNvbXBsZXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChhLCBiKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dHVyZS5vbmxvYWQgPSBldiA9PiB7XHJcbiAgICAgICAgICAgICAgICBhKCk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHRoaXMudGV4dHVyZS5vbmVycm9yID0gYjtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/PuzzleSet.ts\n");

/***/ }),

/***/ "./src/RAFPulseClock.ts":
/*!******************************!*\
  !*** ./src/RAFPulseClock.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RAFPulseClock; });\nclass RAFPulseClock {\r\n    constructor(update) {\r\n        this.running = false;\r\n        this.a = null;\r\n        this.update = update;\r\n    }\r\n    run() {\r\n        this.running = true;\r\n        this.a = (t) => {\r\n            this.update(t);\r\n            if (this.running) {\r\n                requestAnimationFrame(this.a);\r\n            }\r\n        };\r\n        requestAnimationFrame(this.a);\r\n    }\r\n    stop() {\r\n        this.running = false;\r\n        this.a = null;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvUkFGUHVsc2VDbG9jay50cz8zY2M2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9zcmMvUkFGUHVsc2VDbG9jay50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJBRlB1bHNlQ2xvY2sge1xyXG4gICAgY29uc3RydWN0b3IodXBkYXRlKSB7XHJcbiAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5hID0gbnVsbDtcclxuICAgICAgICB0aGlzLnVwZGF0ZSA9IHVwZGF0ZTtcclxuICAgIH1cclxuICAgIHJ1bigpIHtcclxuICAgICAgICB0aGlzLnJ1bm5pbmcgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuYSA9ICh0KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKHQpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5ydW5uaW5nKSB7XHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYSk7XHJcbiAgICB9XHJcbiAgICBzdG9wKCkge1xyXG4gICAgICAgIHRoaXMucnVubmluZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYSA9IG51bGw7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/RAFPulseClock.ts\n");

/***/ }),

/***/ "./src/Timer.ts":
/*!**********************!*\
  !*** ./src/Timer.ts ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Timer; });\n/** 마이크로초를 mm : ss . ss 로 나눈다. */\r\nfunction formatMs(ms) {\r\n    let val = Math.round(ms / 10);\r\n    let min = Math.floor(val / 6000);\r\n    let centisec = val % 6000;\r\n    let centisec_str = centisec.toString();\r\n    let centisec_len = centisec_str.length;\r\n    if (centisec_len < 4) {\r\n        let a = Array(4 - centisec_len);\r\n        a.fill('0');\r\n        centisec_str = a.join('') + centisec_str;\r\n    }\r\n    let min_str = min.toString();\r\n    let min_len = min_str.length;\r\n    if (min_len < 2) {\r\n        let a = Array(2 - min_len);\r\n        a.fill('0');\r\n        min_str = a.join('') + min_str;\r\n    }\r\n    return [min_str, centisec_str.substr(0, 2), centisec_str.substr(2, 2)];\r\n}\r\n/**\r\n * 타이머 컴포넌트\r\n * DOMHighResTimestamp 때문에 로직이 은근 복잡하다.\r\n * */\r\nclass Timer {\r\n    constructor() {\r\n        /** 시작 버튼을 누른 시각 */\r\n        this.startTime = null;\r\n        /** 퍼즐이 중단된 시각 */\r\n        this.endTime = null;\r\n        /** rAF에 의해 입력되는 시각 */\r\n        this.currentTime = 0;\r\n    }\r\n    set width(v) {\r\n        this._width = v;\r\n        this.w_3 = v / 3;\r\n        this.w_6 = v / 6;\r\n        this.p = this.w_6 - v / 25;\r\n        this.q = this.w_6 + v / 25;\r\n    }\r\n    start(startTime) {\r\n        this.startTime = startTime;\r\n        this.endTime = null;\r\n    }\r\n    end(endTime) {\r\n        this.endTime = endTime;\r\n    }\r\n    reset() {\r\n        this.startTime = null;\r\n        this.endTime = null;\r\n        this.currentTime = null;\r\n    }\r\n    update(t) {\r\n        this.currentTime = t;\r\n    }\r\n    render(context) {\r\n        let { y, left, w_3, w_6, p, q } = this;\r\n        context.font = this.fontSize + 'px \"Exo 2\"';\r\n        let [min, sec, cs] = formatMs(this.currentTime - this.startTime);\r\n        context.lineWidth = 4;\r\n        context.strokeText(min, left + w_6, y);\r\n        context.fillText(min, left + w_6, y);\r\n        context.strokeText('\\'', left + w_3, y);\r\n        context.fillText('\\'', left + w_3, y);\r\n        context.strokeText(sec[0], left + w_3 + p, y);\r\n        context.fillText(sec[0], left + w_3 + p, y);\r\n        context.strokeText(sec[1], left + w_3 + q, y);\r\n        context.fillText(sec[1], left + w_3 + q, y);\r\n        context.strokeText('\"', left + w_3 * 2, y);\r\n        context.fillText('\"', left + w_3 * 2, y);\r\n        context.strokeText(cs[0], left + w_3 * 2 + p, y);\r\n        context.fillText(cs[0], left + w_3 * 2 + p, y);\r\n        context.strokeText(cs[1], left + w_3 * 2 + q, y);\r\n        context.fillText(cs[1], left + w_3 * 2 + q, y);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvVGltZXIudHM/OGJjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwwQkFBMEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9zcmMvVGltZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiog66eI7J207YGs66Gc7LSI66W8IG1tIDogc3MgLiBzcyDroZwg64KY64iI64ukLiAqL1xyXG5mdW5jdGlvbiBmb3JtYXRNcyhtcykge1xyXG4gICAgbGV0IHZhbCA9IE1hdGgucm91bmQobXMgLyAxMCk7XHJcbiAgICBsZXQgbWluID0gTWF0aC5mbG9vcih2YWwgLyA2MDAwKTtcclxuICAgIGxldCBjZW50aXNlYyA9IHZhbCAlIDYwMDA7XHJcbiAgICBsZXQgY2VudGlzZWNfc3RyID0gY2VudGlzZWMudG9TdHJpbmcoKTtcclxuICAgIGxldCBjZW50aXNlY19sZW4gPSBjZW50aXNlY19zdHIubGVuZ3RoO1xyXG4gICAgaWYgKGNlbnRpc2VjX2xlbiA8IDQpIHtcclxuICAgICAgICBsZXQgYSA9IEFycmF5KDQgLSBjZW50aXNlY19sZW4pO1xyXG4gICAgICAgIGEuZmlsbCgnMCcpO1xyXG4gICAgICAgIGNlbnRpc2VjX3N0ciA9IGEuam9pbignJykgKyBjZW50aXNlY19zdHI7XHJcbiAgICB9XHJcbiAgICBsZXQgbWluX3N0ciA9IG1pbi50b1N0cmluZygpO1xyXG4gICAgbGV0IG1pbl9sZW4gPSBtaW5fc3RyLmxlbmd0aDtcclxuICAgIGlmIChtaW5fbGVuIDwgMikge1xyXG4gICAgICAgIGxldCBhID0gQXJyYXkoMiAtIG1pbl9sZW4pO1xyXG4gICAgICAgIGEuZmlsbCgnMCcpO1xyXG4gICAgICAgIG1pbl9zdHIgPSBhLmpvaW4oJycpICsgbWluX3N0cjtcclxuICAgIH1cclxuICAgIHJldHVybiBbbWluX3N0ciwgY2VudGlzZWNfc3RyLnN1YnN0cigwLCAyKSwgY2VudGlzZWNfc3RyLnN1YnN0cigyLCAyKV07XHJcbn1cclxuLyoqXHJcbiAqIO2DgOydtOuouCDsu7Ttj6zrhIztirhcclxuICogRE9NSGlnaFJlc1RpbWVzdGFtcCDrlYzrrLjsl5Ag66Gc7KeB7J20IOydgOq3vCDrs7XsnqHtlZjri6QuXHJcbiAqICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVyIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIC8qKiDsi5zsnpEg67KE7Yq87J2EIOuIhOuluCDsi5zqsIEgKi9cclxuICAgICAgICB0aGlzLnN0YXJ0VGltZSA9IG51bGw7XHJcbiAgICAgICAgLyoqIO2NvOymkOydtCDspJHri6jrkJwg7Iuc6rCBICovXHJcbiAgICAgICAgdGhpcy5lbmRUaW1lID0gbnVsbDtcclxuICAgICAgICAvKiogckFG7JeQIOydmO2VtCDsnoXroKXrkJjripQg7Iuc6rCBICovXHJcbiAgICAgICAgdGhpcy5jdXJyZW50VGltZSA9IDA7XHJcbiAgICB9XHJcbiAgICBzZXQgd2lkdGgodikge1xyXG4gICAgICAgIHRoaXMuX3dpZHRoID0gdjtcclxuICAgICAgICB0aGlzLndfMyA9IHYgLyAzO1xyXG4gICAgICAgIHRoaXMud182ID0gdiAvIDY7XHJcbiAgICAgICAgdGhpcy5wID0gdGhpcy53XzYgLSB2IC8gMjU7XHJcbiAgICAgICAgdGhpcy5xID0gdGhpcy53XzYgKyB2IC8gMjU7XHJcbiAgICB9XHJcbiAgICBzdGFydChzdGFydFRpbWUpIHtcclxuICAgICAgICB0aGlzLnN0YXJ0VGltZSA9IHN0YXJ0VGltZTtcclxuICAgICAgICB0aGlzLmVuZFRpbWUgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgZW5kKGVuZFRpbWUpIHtcclxuICAgICAgICB0aGlzLmVuZFRpbWUgPSBlbmRUaW1lO1xyXG4gICAgfVxyXG4gICAgcmVzZXQoKSB7XHJcbiAgICAgICAgdGhpcy5zdGFydFRpbWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZW5kVGltZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50VGltZSA9IG51bGw7XHJcbiAgICB9XHJcbiAgICB1cGRhdGUodCkge1xyXG4gICAgICAgIHRoaXMuY3VycmVudFRpbWUgPSB0O1xyXG4gICAgfVxyXG4gICAgcmVuZGVyKGNvbnRleHQpIHtcclxuICAgICAgICBsZXQgeyB5LCBsZWZ0LCB3XzMsIHdfNiwgcCwgcSB9ID0gdGhpcztcclxuICAgICAgICBjb250ZXh0LmZvbnQgPSB0aGlzLmZvbnRTaXplICsgJ3B4IFwiRXhvIDJcIic7XHJcbiAgICAgICAgbGV0IFttaW4sIHNlYywgY3NdID0gZm9ybWF0TXModGhpcy5jdXJyZW50VGltZSAtIHRoaXMuc3RhcnRUaW1lKTtcclxuICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IDQ7XHJcbiAgICAgICAgY29udGV4dC5zdHJva2VUZXh0KG1pbiwgbGVmdCArIHdfNiwgeSk7XHJcbiAgICAgICAgY29udGV4dC5maWxsVGV4dChtaW4sIGxlZnQgKyB3XzYsIHkpO1xyXG4gICAgICAgIGNvbnRleHQuc3Ryb2tlVGV4dCgnXFwnJywgbGVmdCArIHdfMywgeSk7XHJcbiAgICAgICAgY29udGV4dC5maWxsVGV4dCgnXFwnJywgbGVmdCArIHdfMywgeSk7XHJcbiAgICAgICAgY29udGV4dC5zdHJva2VUZXh0KHNlY1swXSwgbGVmdCArIHdfMyArIHAsIHkpO1xyXG4gICAgICAgIGNvbnRleHQuZmlsbFRleHQoc2VjWzBdLCBsZWZ0ICsgd18zICsgcCwgeSk7XHJcbiAgICAgICAgY29udGV4dC5zdHJva2VUZXh0KHNlY1sxXSwgbGVmdCArIHdfMyArIHEsIHkpO1xyXG4gICAgICAgIGNvbnRleHQuZmlsbFRleHQoc2VjWzFdLCBsZWZ0ICsgd18zICsgcSwgeSk7XHJcbiAgICAgICAgY29udGV4dC5zdHJva2VUZXh0KCdcIicsIGxlZnQgKyB3XzMgKiAyLCB5KTtcclxuICAgICAgICBjb250ZXh0LmZpbGxUZXh0KCdcIicsIGxlZnQgKyB3XzMgKiAyLCB5KTtcclxuICAgICAgICBjb250ZXh0LnN0cm9rZVRleHQoY3NbMF0sIGxlZnQgKyB3XzMgKiAyICsgcCwgeSk7XHJcbiAgICAgICAgY29udGV4dC5maWxsVGV4dChjc1swXSwgbGVmdCArIHdfMyAqIDIgKyBwLCB5KTtcclxuICAgICAgICBjb250ZXh0LnN0cm9rZVRleHQoY3NbMV0sIGxlZnQgKyB3XzMgKiAyICsgcSwgeSk7XHJcbiAgICAgICAgY29udGV4dC5maWxsVGV4dChjc1sxXSwgbGVmdCArIHdfMyAqIDIgKyBxLCB5KTtcclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Timer.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _PuzzleSet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PuzzleSet */ \"./src/PuzzleSet.ts\");\n/* harmony import */ var _RAFPulseClock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RAFPulseClock */ \"./src/RAFPulseClock.ts\");\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Game */ \"./src/Game.ts\");\n/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Input */ \"./src/Input.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nlet game;\r\nlet clock;\r\nlet input;\r\nconst [gameCanvas, previewCanvas] = document.getElementsByTagName('canvas');\r\nconst gameContext = gameCanvas.getContext('2d');\r\nconst previewContext = previewCanvas.getContext('2d');\r\ngameContext.textAlign = 'center';\r\ngameContext.textBaseline = 'middle';\r\nconst horizontalMargin = 20;\r\nconst verticalMargin = 20;\r\nconst boardLength = gameCanvas.width - horizontalMargin * 2;\r\nconst timerHeight = gameCanvas.height / 5;\r\nconst sizeInput = document.getElementById('size');\r\nconst puzzleSelector = document.getElementById('puzzle-selector');\r\nconst startButton = document.getElementById('start');\r\nconst stopButton = document.getElementById('stop');\r\nconst blankPositionSelector = {\r\n    topLeft: document.getElementById('blank-pos-top-left'),\r\n    topRight: document.getElementById('blank-pos-top-right'),\r\n    bottomLeft: document.getElementById('blank-pos-bottom-left'),\r\n    bottomRight: document.getElementById('blank-pos-bottom-right'),\r\n};\r\nfunction decodeBlank() {\r\n    return [\r\n        blankPositionSelector.bottomLeft.checked || blankPositionSelector.bottomRight.checked,\r\n        blankPositionSelector.topRight.checked || blankPositionSelector.bottomRight.checked\r\n    ];\r\n}\r\nconst labelSelector = {\r\n    none: document.getElementById('show-label-none'),\r\n    phone: document.getElementById('show-label-phone'),\r\n    keypad: document.getElementById('show-label-keypad')\r\n};\r\nfunction loadPuzzleSets() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const puzzleSets = [];\r\n        const response = yield fetch('puzzleset.json');\r\n        const puzzleSetDataArray = yield response.json();\r\n        for (let i = 0; i < puzzleSetDataArray.length; i++) {\r\n            const puzzleSet = puzzleSetDataArray[i];\r\n            puzzleSet.__proto__ = _PuzzleSet__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype;\r\n            puzzleSets.push(puzzleSet);\r\n            const selectOption = document.createElement('option');\r\n            selectOption.value = i.toString();\r\n            selectOption.innerText = puzzleSet.title;\r\n            puzzleSelector.appendChild(selectOption);\r\n        }\r\n        yield Promise.all(puzzleSets.map(v => v.waitForImageLoad()));\r\n        return puzzleSets;\r\n    });\r\n}\r\nfunction resetButtons() {\r\n    startButton.innerText = '시작하기';\r\n    stopButton.disabled = true;\r\n}\r\nfunction setSizeHandler() {\r\n    game.setSize(sizeInput.valueAsNumber, ...decodeBlank());\r\n    resetButtons();\r\n}\r\nfunction renderPreview({ texture, left, top, size }) {\r\n    let { width, height } = previewCanvas;\r\n    previewContext.clearRect(0, 0, width, height);\r\n    previewContext.drawImage(texture, left, top, size, size, horizontalMargin, verticalMargin, width - horizontalMargin * 2, height - verticalMargin * 2);\r\n}\r\nloadPuzzleSets().then((puzzleSets) => {\r\n    startButton.addEventListener('click', ev => {\r\n        game.shuffle();\r\n        game.initPiecePosition();\r\n        game.start(ev.timeStamp);\r\n        startButton.innerText = '다시하기';\r\n        stopButton.disabled = false;\r\n    });\r\n    stopButton.addEventListener('click', ev => {\r\n        game.end(ev.timeStamp);\r\n        resetButtons();\r\n    });\r\n    blankPositionSelector.topLeft.addEventListener('input', setSizeHandler);\r\n    blankPositionSelector.topRight.addEventListener('input', setSizeHandler);\r\n    blankPositionSelector.bottomLeft.addEventListener('input', setSizeHandler);\r\n    blankPositionSelector.bottomRight.addEventListener('input', setSizeHandler);\r\n    sizeInput.addEventListener('change', setSizeHandler);\r\n    puzzleSelector.addEventListener('change', ev => {\r\n        game.setPuzzleSet(puzzleSets[puzzleSelector.value]);\r\n        renderPreview(puzzleSets[puzzleSelector.value]);\r\n        resetButtons();\r\n    });\r\n    labelSelector.none.addEventListener('input', ev => {\r\n        game.showLabel = false;\r\n    });\r\n    labelSelector.phone.addEventListener('input', ev => {\r\n        game.showLabel = true;\r\n        game.assignLabel(false);\r\n    });\r\n    labelSelector.keypad.addEventListener('input', ev => {\r\n        game.showLabel = true;\r\n        game.assignLabel(true);\r\n    });\r\n    let puzzleSet = puzzleSets[puzzleSelector.value];\r\n    let size = sizeInput.valueAsNumber;\r\n    let scale = gameCanvas.width / gameCanvas.getBoundingClientRect().width;\r\n    game = new _Game__WEBPACK_IMPORTED_MODULE_2__[\"default\"](size, puzzleSet, horizontalMargin, verticalMargin, boardLength, timerHeight);\r\n    game.completeHandlers.push(resetButtons);\r\n    renderPreview(puzzleSet);\r\n    input = new _Input__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n    input.scale = scale;\r\n    input.connect(gameCanvas, game);\r\n    clock = new _RAFPulseClock__WEBPACK_IMPORTED_MODULE_1__[\"default\"](t => {\r\n        input.update();\r\n        game.update(t, input);\r\n        game.render(gameContext);\r\n    });\r\n    clock.run();\r\n    window.game = game;\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/*! exports provided: getRowCol, getPosition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRowCol\", function() { return getRowCol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPosition\", function() { return getPosition; });\nfunction quantize(pos, parentSize, offset, divideBy) {\r\n    let n = Math.floor((pos - offset) / (parentSize / divideBy));\r\n    return n;\r\n}\r\n/**\r\n * 왼쪽 경계가 left, 오른쪽 경계가 top인 정사각형 parentSize를 정사각행렬 꼴로 divideBy만큼 나누었을 때, 좌표 (x, y)가 속한 행렬 위치\r\n */\r\nfunction getRowCol(x, y, parentSize, left, top, divideBy) {\r\n    return [\r\n        quantize(y, parentSize, top, divideBy),\r\n        quantize(x, parentSize, left, divideBy)\r\n    ];\r\n}\r\n/**\r\n * 왼쪽 경계가 left, 오른쪽 경계가 top인 정사각형 parentSize를 정사각행렬 꼴로 divideBy만큼 나누었을 때, row행 col열에 있는 부분 정사각형의 왼쪽 위 좌표\r\n */\r\nfunction getPosition(row, col, parentSize, left, top, divideBy) {\r\n    let d = parentSize / divideBy;\r\n    return [left + col * d, top + row * d];\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMudHM/MjA1MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vc3JjL3V0aWxzLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcXVhbnRpemUocG9zLCBwYXJlbnRTaXplLCBvZmZzZXQsIGRpdmlkZUJ5KSB7XHJcbiAgICBsZXQgbiA9IE1hdGguZmxvb3IoKHBvcyAtIG9mZnNldCkgLyAocGFyZW50U2l6ZSAvIGRpdmlkZUJ5KSk7XHJcbiAgICByZXR1cm4gbjtcclxufVxyXG4vKipcclxuICog7Jm87Kq9IOqyveqzhOqwgCBsZWZ0LCDsmKTrpbjsqr0g6rK96rOE6rCAIHRvcOyduCDsoJXsgqzqsIHtmJUgcGFyZW50U2l6ZeulvCDsoJXsgqzqsIHtlonroKwg6ry066GcIGRpdmlkZUJ566eM7YG8IOuCmOuIhOyXiOydhCDrlYwsIOyijO2RnCAoeCwgeSnqsIAg7IaN7ZWcIO2WieugrCDsnITsuZhcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSb3dDb2woeCwgeSwgcGFyZW50U2l6ZSwgbGVmdCwgdG9wLCBkaXZpZGVCeSkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgICBxdWFudGl6ZSh5LCBwYXJlbnRTaXplLCB0b3AsIGRpdmlkZUJ5KSxcclxuICAgICAgICBxdWFudGl6ZSh4LCBwYXJlbnRTaXplLCBsZWZ0LCBkaXZpZGVCeSlcclxuICAgIF07XHJcbn1cclxuLyoqXHJcbiAqIOyZvOyqvSDqsr3qs4TqsIAgbGVmdCwg7Jik66W47Kq9IOqyveqzhOqwgCB0b3Dsnbgg7KCV7IKs6rCB7ZiVIHBhcmVudFNpemXrpbwg7KCV7IKs6rCB7ZaJ66CsIOq8tOuhnCBkaXZpZGVCeeunjO2BvCDrgpjriITsl4jsnYQg65WMLCByb3ftlokgY29s7Je07JeQIOyeiOuKlCDrtoDrtoQg7KCV7IKs6rCB7ZiV7J2YIOyZvOyqvSDsnIQg7KKM7ZGcXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9zaXRpb24ocm93LCBjb2wsIHBhcmVudFNpemUsIGxlZnQsIHRvcCwgZGl2aWRlQnkpIHtcclxuICAgIGxldCBkID0gcGFyZW50U2l6ZSAvIGRpdmlkZUJ5O1xyXG4gICAgcmV0dXJuIFtsZWZ0ICsgY29sICogZCwgdG9wICsgcm93ICogZF07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils.ts\n");

/***/ })

/******/ });